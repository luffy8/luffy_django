# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-03-02 09:08
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('api', '0002_auto_20180301_1926'),
    ]

    operations = [
        migrations.CreateModel(
            name='CouponRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(0, '未使用'), (1, '已使用'), (2, '已过期')], default=0)),
                ('get_time', models.DateTimeField(help_text='用户领取时间', verbose_name='领取时间')),
                ('used_time', models.DateTimeField(blank=True, null=True, verbose_name='使用时间')),
            ],
        ),
        migrations.CreateModel(
            name='CourseReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_teacher', models.FloatField(default=0, verbose_name='讲师讲解是否清晰')),
                ('about_video', models.FloatField(default=0, verbose_name='内容实用')),
                ('about_course', models.FloatField(default=0, verbose_name='课程内容通俗易懂')),
                ('review', models.TextField(max_length=1024, verbose_name='评价')),
                ('disagree_number', models.IntegerField(default=0, verbose_name='踩')),
                ('agree_number', models.IntegerField(default=0, verbose_name='赞同数')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='评价日期')),
                ('is_recommend', models.BooleanField(default=False, verbose_name='热评推荐')),
                ('hide', models.BooleanField(default=False, verbose_name='不在前端页面显示此条评价')),
            ],
        ),
        migrations.CreateModel(
            name='CourseSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommend_date', models.DateField(verbose_name='推荐交作业日期')),
            ],
        ),
        migrations.CreateModel(
            name='DegreeCourseReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_teacher', models.FloatField(default=0, verbose_name='讲师讲解是否清晰')),
                ('about_video', models.FloatField(default=0, verbose_name='视频质量')),
                ('about_course', models.FloatField(default=0, verbose_name='课程')),
                ('review', models.TextField(max_length=1024, verbose_name='评价')),
                ('disagree_number', models.IntegerField(default=0, verbose_name='踩')),
                ('agree_number', models.IntegerField(default=0, verbose_name='赞同数')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='评价日期')),
                ('is_recommend', models.BooleanField(default=False, verbose_name='热评推荐')),
                ('hide', models.BooleanField(default=False, verbose_name='不在前端页面显示此条评价')),
                ('course', models.ForeignKey(blank=True, help_text='不填写即代表评价整个学位课程', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Course', verbose_name='评价学位模块')),
            ],
        ),
        migrations.CreateModel(
            name='DegreeRegistrationForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_company', models.CharField(max_length=64)),
                ('current_position', models.CharField(max_length=64)),
                ('current_salary', models.IntegerField()),
                ('work_experience', models.IntegerField()),
                ('open_module', models.BooleanField(default=True, verbose_name='是否开通第1模块')),
                ('stu_specified_mentor', models.CharField(blank=True, max_length=32, null=True, verbose_name='学员自行指定的导师名')),
                ('study_plan', models.SmallIntegerField(choices=[(0, '1-2小时/天'), (1, '2-3小时/天'), (2, '3-5小时/天'), (3, '5小时+/天')], default=1)),
                ('why_take_this_course', models.TextField(max_length=1024, verbose_name='报此课程原因')),
                ('why_choose_us', models.TextField(max_length=1024, verbose_name='为何选路飞')),
                ('your_expectation', models.TextField(max_length=1024, verbose_name='你的期待')),
                ('memo', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EnrolledCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_date', models.DateTimeField(auto_now_add=True)),
                ('valid_begin_date', models.DateField(verbose_name='有效期开始自')),
                ('valid_end_date', models.DateField(verbose_name='有效期结束至')),
                ('status', models.SmallIntegerField(choices=[(0, '已开通'), (1, '已过期')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='EnrolledDegreeCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_date', models.DateTimeField(auto_now_add=True)),
                ('valid_begin_date', models.DateField(blank=True, null=True, verbose_name='有效期开始自')),
                ('valid_end_date', models.DateField(blank=True, null=True, verbose_name='有效期结束至')),
                ('study_status', models.SmallIntegerField(choices=[(0, '在学中'), (1, '休学中'), (2, '已毕业'), (3, '超时结业'), (4, '未开始')], default=0)),
                ('mentor_fee_balance', models.PositiveIntegerField(help_text='这个学员的导师费用，每有惩罚，需在此字段同时扣除', verbose_name='导师费用余额')),
            ],
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='作业题目')),
                ('order', models.PositiveSmallIntegerField(help_text='同一课程的每个作业之前的order值间隔1-2个数', verbose_name='作业顺序')),
                ('homework_type', models.SmallIntegerField(choices=[(0, '作业'), (1, '模块通关考核')], default=0)),
                ('requirement', models.TextField(max_length=1024, verbose_name='作业需求')),
                ('threshold', models.TextField(max_length=1024, verbose_name='踩分点')),
                ('recommend_period', models.PositiveSmallIntegerField(default=7, verbose_name='推荐完成周期(天)')),
                ('scholarship_value', models.PositiveSmallIntegerField(verbose_name='为该作业分配的奖学金(贝里)')),
                ('note', models.TextField(blank=True, null=True)),
                ('enabled', models.BooleanField(default=True, help_text='本作业如果后期不需要了，不想让学员看到，可以设置为False')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.CourseChapter')),
            ],
        ),
        migrations.CreateModel(
            name='HomeworkRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.SmallIntegerField(blank=True, choices=[(100, 'A+'), (90, 'A'), (85, 'B+'), (80, 'B'), (70, 'B-'), (60, 'C+'), (50, 'C'), (40, 'C-'), (-1, 'D'), (0, 'N/A'), (-100, 'COPY')], null=True, verbose_name='分数')),
                ('mentor_comment', models.TextField(blank=True, null=True, verbose_name='导师批注')),
                ('status', models.SmallIntegerField(choices=[(0, '待批改'), (1, '已通过'), (2, '不合格')], default=0, verbose_name='作业状态')),
                ('submit_num', models.SmallIntegerField(default=0, verbose_name='提交次数')),
                ('correct_date', models.DateTimeField(blank=True, null=True, verbose_name='备注日期')),
                ('note', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='作业提交日期')),
                ('check_date', models.DateTimeField(blank=True, null=True, verbose_name='批改日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='提交日期')),
                ('reward_status', models.SmallIntegerField(default=0, verbose_name='作业记录奖惩状态')),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Homework')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.SmallIntegerField(choices=[(0, '微信'), (1, '支付宝'), (2, '优惠码'), (3, '贝里')])),
                ('payment_number', models.CharField(blank=True, max_length=128, null=True, verbose_name='支付第3方订单号')),
                ('order_number', models.CharField(max_length=128, unique=True, verbose_name='订单号')),
                ('actual_amount', models.FloatField(verbose_name='实付金额')),
                ('status', models.SmallIntegerField(choices=[(0, '交易成功'), (1, '待支付'), (2, '退费申请中'), (3, '已退费'), (4, '主动取消'), (5, '超时取消')], verbose_name='状态')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='订单生成时间')),
                ('pay_time', models.DateTimeField(blank=True, null=True, verbose_name='付款时间')),
                ('cancel_time', models.DateTimeField(blank=True, null=True, verbose_name='订单取消时间')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('original_price', models.FloatField(verbose_name='课程原价')),
                ('price', models.FloatField(verbose_name='折后价格')),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
                ('valid_period_display', models.CharField(max_length=32, verbose_name='有效期显示')),
                ('valid_period', models.PositiveIntegerField(verbose_name='有效期(days)')),
                ('memo', models.CharField(blank=True, max_length=255, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Order')),
            ],
        ),
        migrations.CreateModel(
            name='StudyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open_date', models.DateField(blank=True, null=True, verbose_name='开通日期')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='完成日期')),
                ('status', models.SmallIntegerField(choices=[(2, '在学'), (1, '未开通'), (0, '已完成')], default=1)),
                ('course_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Course', verbose_name='学位模块')),
                ('enrolled_degree_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EnrolledDegreeCourse')),
            ],
        ),
        migrations.CreateModel(
            name='StuFollowUpRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followup_tool', models.SmallIntegerField(choices=[(0, 'QQ'), (1, '微信'), (2, '电话'), (3, '系统通知')], default=1)),
                ('record', models.TextField(verbose_name='跟进记录')),
                ('attachment_path', models.CharField(blank=True, help_text='跟进记录的截图等', max_length=128, null=True, verbose_name='附件路径')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('enrolled_degree_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EnrolledDegreeCourse', verbose_name='学生')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='金额')),
                ('balance', models.IntegerField(verbose_name='账户余额')),
                ('transaction_type', models.SmallIntegerField(choices=[(0, '收入'), (1, '支出'), (2, '退款'), (3, '提现')])),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='关联对象')),
                ('transaction_number', models.CharField(max_length=128, unique=True, verbose_name='流水号')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('memo', models.CharField(blank=True, max_length=128, null=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='account',
            options={'verbose_name': '账户信息', 'verbose_name_plural': '账户信息'},
        ),
        migrations.RemoveField(
            model_name='comment',
            name='article',
        ),
        migrations.AddField(
            model_name='account',
            name='balance',
            field=models.PositiveIntegerField(default=0, verbose_name='可提现和使用余额'),
        ),
        migrations.AddField(
            model_name='account',
            name='openid',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='account',
            name='uid',
            field=models.CharField(blank=True, help_text='微信用户绑定和CC视频统计', max_length=64, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='comment',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='类型'),
        ),
        migrations.AddField(
            model_name='comment',
            name='object_id',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='courseoutline',
            name='order',
            field=models.PositiveSmallIntegerField(default=1),
        ),
        migrations.AlterField(
            model_name='courseoutline',
            name='title',
            field=models.CharField(max_length=128),
        ),
        migrations.AddField(
            model_name='transactionrecord',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account'),
        ),
        migrations.AddField(
            model_name='transactionrecord',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='stufollowuprecord',
            name='mentor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentor', to='api.Account', verbose_name='导师'),
        ),
        migrations.AddField(
            model_name='order',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account'),
        ),
        migrations.AddField(
            model_name='homeworkrecord',
            name='mentor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_stu_homework_record', to='api.Account', verbose_name='导师'),
        ),
        migrations.AddField(
            model_name='homeworkrecord',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EnrolledDegreeCourse', verbose_name='学生'),
        ),
        migrations.AddField(
            model_name='enrolleddegreecourse',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account'),
        ),
        migrations.AddField(
            model_name='enrolleddegreecourse',
            name='degree_course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.DegreeCourse'),
        ),
        migrations.AddField(
            model_name='enrolleddegreecourse',
            name='mentor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='my_students', to='api.Account', verbose_name='导师'),
        ),
        migrations.AddField(
            model_name='enrolleddegreecourse',
            name='order_detail',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.OrderDetail'),
        ),
        migrations.AddField(
            model_name='enrolledcourse',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account'),
        ),
        migrations.AddField(
            model_name='enrolledcourse',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Course'),
        ),
        migrations.AddField(
            model_name='enrolledcourse',
            name='order_detail',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.OrderDetail'),
        ),
        migrations.AddField(
            model_name='degreeregistrationform',
            name='enrolled_degree',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.EnrolledDegreeCourse'),
        ),
        migrations.AddField(
            model_name='degreecoursereview',
            name='enrolled_course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EnrolledDegreeCourse'),
        ),
        migrations.AddField(
            model_name='courseschedule',
            name='homework',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Homework'),
        ),
        migrations.AddField(
            model_name='courseschedule',
            name='study_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.StudyRecord'),
        ),
        migrations.AddField(
            model_name='coursereview',
            name='enrolled_course',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.EnrolledCourse'),
        ),
        migrations.AddField(
            model_name='couponrecord',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account', verbose_name='拥有者'),
        ),
        migrations.AddField(
            model_name='couponrecord',
            name='coupon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Coupon'),
        ),
        migrations.AddField(
            model_name='couponrecord',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Order', verbose_name='关联订单'),
        ),
        migrations.AlterUniqueTogether(
            name='studyrecord',
            unique_together=set([('enrolled_degree_course', 'course_module')]),
        ),
        migrations.AlterUniqueTogether(
            name='orderdetail',
            unique_together=set([('order', 'content_type', 'object_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='homeworkrecord',
            unique_together=set([('homework', 'student')]),
        ),
        migrations.AlterUniqueTogether(
            name='homework',
            unique_together=set([('chapter', 'title')]),
        ),
        migrations.AlterUniqueTogether(
            name='enrolleddegreecourse',
            unique_together=set([('account', 'degree_course')]),
        ),
        migrations.AlterUniqueTogether(
            name='courseschedule',
            unique_together=set([('study_record', 'homework')]),
        ),
    ]
